apiVersion: charts.janus-idp.io/v1alpha1
kind: Backstage
metadata:
  name: backstage-sample
spec:
  # Default values copied from <project_dir>/helm-charts/backstage/values.yaml
  global:
    clusterRouterBase: "aaa.example.com"
    postgresql:
      auth:
        password: "asdf"  
  route:
    annotations: {}
    enabled: true
    host: ""
    path: /
    tls:
      caCertificate: ""
      certificate: ""
      destinationCACertificate: ""
      enabled: true
      insecureEdgeTerminationPolicy: Redirect
      key: ""
      termination: edge
    wildcardPolicy: None
  upstream:
    backstage:
      appConfig:
        app:
          baseUrl: https://{{- include "janus-idp.hostname" . }}
        backend:
          baseUrl: https://{{- include "janus-idp.hostname" . }}
          cors:
            origin: https://{{- include "janus-idp.hostname" . }}
          database:
            connection:
              password: ${POSTGRESQL_ADMIN_PASSWORD}
              user: postgres
          auth:
            keys:
              - secret: "asdf"
        proxy:
          endpoints: {}
      command: []
      extraEnvVars:
      - name: POSTGRESQL_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgres-password
            name: '{{ .Release.Name }}-postgresql'
      image:
        registry: quay.io
        repository: tkral/backstage-showcase
        tag: fix-477
    nameOverride: backstage
    postgresql:
      auth:
        postgresPassword: asdf
      enabled: true
      image:
        registry: quay.io
        repository: fedora/postgresql-15
        tag: latest
      postgresqlDataDir: /var/lib/pgsql/data/userdata
      primary:
        containerSecurityContext:
          enabled: false
        extraEnvVars:
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: '{{ .Release.Name }}-postgresql'
        persistence:
          enabled: false
          mountPath: /var/lib/pgsql/data
          size: 1Gi
        podSecurityContext:
          enabled: false
        securityContext:
          enabled: false
  
  
